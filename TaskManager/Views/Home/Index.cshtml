@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer

<div class="text-center">
<h1 class="display-4">@localizer["Title-My-Todos"]</h1>
<button type="button" class="btn btn-primary mb-3" onclick="addNewTask()">@localizer["btn:Add-new-task"]</button>
</div>


<div id="container-todos-list" class="text-center">
    <div class="text-start" data-bind="foreach: todos">
        <div name="todo" class="border mb-2 p-2" style="cursor: pointer">
            <div data-bind="text: title,hidden: isNew" class="fw-bold"></div>
            
            <input type="text" name="title-todo" autocomplete="off" 
                   data-bind="value: title,visible: isNew, event: { focusout: managerFocusoutTitleTodo}"/>
        </div>
    </div>
    
    <div data-bind="visible: loading" class="spinner-border">
        <span class="visually-hidden">@localizer["loading"]</span>   
    </div>
    <div data-bind="visible: noTasks">
        @localizer["No-Tasks"]   
    </div>
</div>

@section Scripts {
    <script src="~/js/todos.js" asp-append-version="true"></script>
    <script src="~/js/Utilities.js" asp-append-version="true"></script>
    <script>
        
        const urlTodos = "/api/todos";
        
        function todoListViewModelFn(){
            var self = this;
            self.todos= ko.observableArray([]);
            self.loading= ko.observable(true);
            
            self.noTasks = ko.pureComputed(function(){
                if(self.loading()){
                    return false;
                }
                return self.todos().length === 0;
            });
        }
        
        function todoitemListViewModelFn({id, title}){
            var self = this;
            self.id = ko.observable(id);
            self.title = ko.observable(title);
            self.isNew = ko.pureComputed(function(){
                return self.id() === 0;
            })
        }
        
        const todoListViewModel = new todoListViewModelFn();
        
        getTodos();
        
        ko.applyBindings(todoListViewModel, document.getElementById('container-todos-list'));
    </script>
}